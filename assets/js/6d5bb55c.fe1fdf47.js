"use strict";(globalThis.webpackChunkchainforge_doc=globalThis.webpackChunkchainforge_doc||[]).push([[195],{2919:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"cosmos/prepare-project","title":"Prepare CosmWasm Project","description":"Prerequisites","source":"@site/docs/cosmos/1-prepare-project.md","sourceDirName":"cosmos","slug":"/cosmos/prepare-project","permalink":"/chainforge-doc/docs/cosmos/prepare-project","draft":false,"unlisted":false,"editUrl":"https://github.com/tranquanghuy7198/chainforge-doc/tree/main/packages/create-docusaurus/templates/shared/docs/cosmos/1-prepare-project.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Cosmos","permalink":"/chainforge-doc/docs/category/cosmos"},"next":{"title":"Generate CosmWasm ABI and Bytecode","permalink":"/chainforge-doc/docs/cosmos/generate-abi-bytecode"}}');var t=r(4848),c=r(8453);const a={sidebar_position:1},o="Prepare CosmWasm Project",i={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Rust and Cargo",id:"install-rust-and-cargo",level:2},{value:"Install cargo-generate",id:"install-cargo-generate",level:2},{value:"Create a New CosmWasm Project",id:"create-a-new-cosmwasm-project",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Build the Contract",id:"build-the-contract",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"prepare-cosmwasm-project",children:"Prepare CosmWasm Project"})}),"\n",(0,t.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Rust (latest stable)"}),"\n",(0,t.jsx)(s.li,{children:"Docker (for optimized builds)"}),"\n",(0,t.jsx)(s.li,{children:"Node.js (v18+, for testing)"}),"\n",(0,t.jsx)(s.li,{children:"Git"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"install-rust-and-cargo",children:"Install Rust and Cargo"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nsource $HOME/.cargo/env\n"})}),"\n",(0,t.jsx)(s.p,{children:"Add the wasm32 target:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"rustup target add wasm32-unknown-unknown\n"})}),"\n",(0,t.jsx)(s.h2,{id:"install-cargo-generate",children:"Install cargo-generate"}),"\n",(0,t.jsx)(s.p,{children:"This tool creates new CosmWasm projects from templates:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"cargo install cargo-generate --features vendored-openssl\n"})}),"\n",(0,t.jsx)(s.h2,{id:"create-a-new-cosmwasm-project",children:"Create a New CosmWasm Project"}),"\n",(0,t.jsx)(s.p,{children:"Generate from the official template:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"cargo generate --git https://github.com/CosmWasm/cw-template.git --name my-contract\ncd my-contract\n"})}),"\n",(0,t.jsx)(s.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"my-contract/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 contract.rs    # Main contract logic\n\u2502   \u251c\u2500\u2500 msg.rs         # Message definitions\n\u2502   \u251c\u2500\u2500 state.rs       # State management\n\u2502   \u251c\u2500\u2500 error.rs       # Error types\n\u2502   \u2514\u2500\u2500 lib.rs         # Library entry point\n\u251c\u2500\u2500 examples/          # Schema generation\n\u251c\u2500\u2500 Cargo.toml         # Dependencies\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,t.jsx)(s.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Edit contract logic in ",(0,t.jsx)(s.code,{children:"src/contract.rs"})]}),"\n",(0,t.jsxs)(s.li,{children:["Define messages in ",(0,t.jsx)(s.code,{children:"src/msg.rs"})]}),"\n",(0,t.jsxs)(s.li,{children:["Implement state in ",(0,t.jsx)(s.code,{children:"src/state.rs"})]}),"\n",(0,t.jsxs)(s.li,{children:["Test thoroughly with ",(0,t.jsx)(s.code,{children:"cargo test"})]}),"\n",(0,t.jsx)(s.li,{children:"Deploy to testnet or mainnet"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"build-the-contract",children:"Build the Contract"}),"\n",(0,t.jsx)(s.p,{children:"Standard build (for development):"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"cargo build\n"})}),"\n",(0,t.jsx)(s.p,{children:"Run tests:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"cargo test\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"For detailed documentation, visit:"})," ",(0,t.jsx)(s.a,{href:"https://docs.cosmwasm.com",children:"CosmWasm Documentation"})]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>o});var n=r(6540);const t={},c=n.createContext(t);function a(e){const s=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);