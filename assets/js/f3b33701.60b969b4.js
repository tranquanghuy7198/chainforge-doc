"use strict";(globalThis.webpackChunkchainforge_doc=globalThis.webpackChunkchainforge_doc||[]).push([[764],{5368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ethereum/interact-with-contract","title":"Interact with EVM Contract","description":"Add Your Contract","source":"@site/docs/ethereum/3-interact-with-contract.md","sourceDirName":"ethereum","slug":"/ethereum/interact-with-contract","permalink":"/chainforge-doc/docs/ethereum/interact-with-contract","draft":false,"unlisted":false,"editUrl":"https://github.com/tranquanghuy7198/chainforge-doc/tree/main/packages/create-docusaurus/templates/shared/docs/ethereum/3-interact-with-contract.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Generate EVM ABI and Bytecode","permalink":"/chainforge-doc/docs/ethereum/generate-abi-bytecode"},"next":{"title":"Solana","permalink":"/chainforge-doc/docs/category/solana"}}');var a=n(4848),o=n(8453);const c={sidebar_position:3},i="Interact with EVM Contract",s={},d=[{value:"Add Your Contract",id:"add-your-contract",level:2},{value:"Method 1: Deploy and Interact",id:"method-1-deploy-and-interact",level:3},{value:"Method 2: Interact Only",id:"method-2-interact-only",level:3},{value:"Upgradeable Contracts",id:"upgradeable-contracts",level:3},{value:"Interaction",id:"interaction",level:2}];function l(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"interact-with-evm-contract",children:"Interact with EVM Contract"})}),"\n",(0,a.jsx)(t.h2,{id:"add-your-contract",children:"Add Your Contract"}),"\n",(0,a.jsxs)(t.p,{children:["To begin working with your EVM contract in ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.em,{children:"ChainForge"})}),", choose one of the following methods:"]}),"\n",(0,a.jsx)(t.h3,{id:"method-1-deploy-and-interact",children:"Method 1: Deploy and Interact"}),"\n",(0,a.jsx)(t.p,{children:"If you intend to deploy your EVM contract to the blockchain, you must provide:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"EVM ABI"})," (JSON array format)"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"EVM bytecode"})," (hexa data)"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["Navigate to ",(0,a.jsx)(t.a,{href:"https://tranquanghuy7198.github.io/chainforge/#/contract-templates",children:"Contract Templates"})," to add these artifacts."]}),"\n",(0,a.jsx)(t.h3,{id:"method-2-interact-only",children:"Method 2: Interact Only"}),"\n",(0,a.jsx)(t.p,{children:"If you only need to interact with an existing EVM contract, the EVM ABI is sufficient."}),"\n",(0,a.jsxs)(t.p,{children:["Navigate to ",(0,a.jsx)(t.a,{href:"https://tranquanghuy7198.github.io/chainforge/#/contracts",children:"Contract Explorer"})," to register your contract."]}),"\n",(0,a.jsx)(t.h3,{id:"upgradeable-contracts",children:"Upgradeable Contracts"}),"\n",(0,a.jsxs)(t.p,{children:["If your smart contract follows the ",(0,a.jsx)(t.a,{href:"https://docs.openzeppelin.com/upgrades-plugins/proxies",children:"OpenZeppelin Upgradeable Proxy Pattern"}),", your deployment consists of two separate contracts:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Proxy contract"})," \u2014 the address that users and applications interact with."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Implementation contract"})," \u2014 the contract that contains the actual logic and functions."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["When interacting with an upgradeable contract in ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.em,{children:"ChainForge"})}),", ensure that you:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Use the ",(0,a.jsx)(t.strong,{children:"ABI of the implementation contract"}),", since it defines the available functions and events."]}),"\n",(0,a.jsxs)(t.li,{children:["Use the ",(0,a.jsx)(t.strong,{children:"address of the proxy contract"}),", since all external calls are routed through the proxy to the current implementation."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This approach aligns with the OpenZeppelin standard, where the proxy delegates all function calls to the implementation while preserving your contract\u2019s storage and state."}),"\n",(0,a.jsx)(t.h2,{id:"interaction",children:"Interaction"}),"\n",(0,a.jsx)(t.p,{children:"You can quickly interact with your EVM contracts by providing necessary parameters:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Complex parameters"})," (arrays, custom structs, etc.) must be provided in JSON format"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Native parameters"})," (addresses, numbers, strings, etc.) can be provided as plain text"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var r=n(6540);const a={},o=r.createContext(a);function c(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);