"use strict";(globalThis.webpackChunkkontrax_doc=globalThis.webpackChunkkontrax_doc||[]).push([[764],{5368:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"ethereum/interact-with-contract","title":"Interact with EVM Contract","description":"Add Your Contract","source":"@site/docs/ethereum/3-interact-with-contract.md","sourceDirName":"ethereum","slug":"/ethereum/interact-with-contract","permalink":"/kontraxhub-doc/docs/ethereum/interact-with-contract","draft":false,"unlisted":false,"editUrl":"https://github.com/tranquanghuy7198/kontraxhub-doc/tree/main/packages/create-docusaurus/templates/shared/docs/ethereum/3-interact-with-contract.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Generate EVM ABI and Bytecode","permalink":"/kontraxhub-doc/docs/ethereum/generate-abi-bytecode"},"next":{"title":"Solana","permalink":"/kontraxhub-doc/docs/category/solana"}}');var a=n(4848),o=n(8453);const i={sidebar_position:3},c="Interact with EVM Contract",s={},l=[{value:"Add Your Contract",id:"add-your-contract",level:2},{value:"Method 1: Deploy and Interact",id:"method-1-deploy-and-interact",level:3},{value:"Method 2: Interact Only",id:"method-2-interact-only",level:3},{value:"Upgradeable Contracts",id:"upgradeable-contracts",level:3},{value:"Interaction",id:"interaction",level:2}];function d(t){const e={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"interact-with-evm-contract",children:"Interact with EVM Contract"})}),"\n",(0,a.jsx)(e.h2,{id:"add-your-contract",children:"Add Your Contract"}),"\n",(0,a.jsxs)(e.p,{children:["To begin working with your EVM contract in ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.em,{children:"KontraxHub"})}),", choose one of the following methods:"]}),"\n",(0,a.jsx)(e.h3,{id:"method-1-deploy-and-interact",children:"Method 1: Deploy and Interact"}),"\n",(0,a.jsx)(e.p,{children:"If you intend to deploy your EVM contract to the blockchain, you must provide:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"EVM ABI"})," (JSON array format)"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"EVM bytecode"})," (hexa data)"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Navigate to ",(0,a.jsx)(e.a,{href:"https://tranquanghuy7198.github.io/kontraxhub/#/contract-templates",children:"Contract Templates"})," to add these artifacts."]}),"\n",(0,a.jsx)(e.h3,{id:"method-2-interact-only",children:"Method 2: Interact Only"}),"\n",(0,a.jsx)(e.p,{children:"If you only need to interact with an existing EVM contract, the EVM ABI is sufficient."}),"\n",(0,a.jsxs)(e.p,{children:["Navigate to ",(0,a.jsx)(e.a,{href:"https://tranquanghuy7198.github.io/kontraxhub/#/contracts",children:"Contract Explorer"})," to register your contract."]}),"\n",(0,a.jsx)(e.h3,{id:"upgradeable-contracts",children:"Upgradeable Contracts"}),"\n",(0,a.jsxs)(e.p,{children:["If your smart contract follows the ",(0,a.jsx)(e.a,{href:"https://docs.openzeppelin.com/upgrades-plugins/proxies",children:"OpenZeppelin Upgradeable Proxy Pattern"}),", your deployment consists of two separate contracts:"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Proxy contract"})," \u2014 the address that users and applications interact with."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Implementation contract"})," \u2014 the contract that contains the actual logic and functions."]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["When interacting with an upgradeable contract in ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.em,{children:"KontraxHub"})}),", ensure that you:"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["Use the ",(0,a.jsx)(e.strong,{children:"ABI of the implementation contract"}),", since it defines the available functions and events."]}),"\n",(0,a.jsxs)(e.li,{children:["Use the ",(0,a.jsx)(e.strong,{children:"address of the proxy contract"}),", since all external calls are routed through the proxy to the current implementation."]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"This approach aligns with the OpenZeppelin standard, where the proxy delegates all function calls to the implementation while preserving your contract\u2019s storage and state."}),"\n",(0,a.jsx)(e.h2,{id:"interaction",children:"Interaction"}),"\n",(0,a.jsx)(e.p,{children:"You can quickly interact with your EVM contracts by providing necessary parameters:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Complex parameters"})," (arrays, custom structs, etc.) must be provided in JSON format"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Native parameters"})," (addresses, numbers, strings, etc.) can be provided as plain text"]}),"\n"]}),"\n",(0,a.jsx)(e.admonition,{title:"Generate default JSON format",type:"tip",children:(0,a.jsxs)(e.p,{children:["For complex parameters, you can right-click the input field and select ",(0,a.jsx)(e.strong,{children:"Generate Default JSON"})," to automatically populate a default JSON structure based on the contract\u2019s ABI. This feature allows you to quickly generate valid parameter templates without manually writing the full JSON."]})})]})}function h(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>c});var r=n(6540);const a={},o=r.createContext(a);function i(t){const e=r.useContext(o);return r.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);